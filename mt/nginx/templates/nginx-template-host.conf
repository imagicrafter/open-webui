# nginx Configuration Template for Open WebUI (HOST Mode)
# This template is used for production deployments with HOST nginx
# SSL certificates are managed by certbot

# HTTP server block - ACME challenge only, certbot will add redirects
server {
    listen 80;
    listen [::]:80;
    server_name DOMAIN_PLACEHOLDER;

    # Let's Encrypt challenge path
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Temporary: proxy to application (certbot will convert this to redirect)
    location / {
        proxy_pass http://localhost:PORT_PLACEHOLDER;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTPS server block (certbot will configure SSL)
server {
    listen 443;
    listen [::]:443;
    server_name DOMAIN_PLACEHOLDER;

    # SSL configuration will be added by certbot
    # ssl_certificate /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/privkey.pem;
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Logging
    access_log /var/log/nginx/DOMAIN_PLACEHOLDER-access.log;
    error_log /var/log/nginx/DOMAIN_PLACEHOLDER-error.log;

    # Max upload size
    client_max_body_size 50M;

    # Proxy settings
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Timeouts for long-running requests
    proxy_connect_timeout 600s;
    proxy_send_timeout 600s;
    proxy_read_timeout 600s;
    send_timeout 600s;

    # OAuth callback - force fresh content (prevents cached redirect issues)
    location /oauth/ {
        proxy_pass http://localhost:PORT_PLACEHOLDER;

        # Force browser to always fetch fresh content
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Auth page - force fresh content (prevents stuck /Auth page)
    location /auth {
        proxy_pass http://localhost:PORT_PLACEHOLDER;

        # Force browser to always fetch fresh content
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        add_header Pragma "no-cache" always;

        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket support for real-time features
    location /ws {
        proxy_pass http://localhost:PORT_PLACEHOLDER;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # API endpoints with increased timeout
    location /api/ {
        proxy_pass http://localhost:PORT_PLACEHOLDER;
        proxy_read_timeout 600s;
    }

    # Static assets - moderate caching (balance performance vs freshness)
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg|eot)$ {
        proxy_pass http://localhost:PORT_PLACEHOLDER;
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
    }

    # Legacy static files location (if needed)
    location /static/ {
        proxy_pass http://localhost:PORT_PLACEHOLDER;
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
    }

    # Default location - browser default caching behavior
    location / {
        proxy_pass http://localhost:PORT_PLACEHOLDER;
    }
}
