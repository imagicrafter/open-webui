######
# Open WebUI Client: ${CLIENT_NAME}
# Generated by client-manager.sh (Containerized nginx - HTTP only, pre-SSL)
#
# Container: ${CONTAINER_NAME}
# FQDN: ${DOMAIN}
#
# Setup Instructions:
# 1. This config is HTTP-only and should be used BEFORE obtaining SSL certificates
# 2. Copy to nginx config directory:
#    cp /tmp/${DOMAIN}-nginx.conf /opt/openwebui-nginx/conf.d/${DOMAIN}.conf
# 3. Test config: docker exec openwebui-nginx nginx -t
# 4. Reload nginx: docker exec openwebui-nginx nginx -s reload
# 5. After SSL cert is obtained, use the full template with SSL configuration
#
# Next Steps After Deployment:
# - Obtain SSL certificate: sudo certbot certonly --webroot -w /opt/openwebui-nginx/webroot -d ${DOMAIN}
# - Update this config to include SSL (see nginx-template-containerized.conf)
# - Reload nginx: docker exec openwebui-nginx nginx -s reload

# HTTP server block (serves content without SSL)
server {
    listen 80;
    listen [::]:80;

    server_name ${DOMAIN};

    # Let's Encrypt webroot challenge (for certificate generation)
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Proxy to Open WebUI container
    location / {
        # Use container name instead of localhost
        proxy_pass http://${CONTAINER_NAME}:8080;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';

        # Headers
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;

        # Open WebUI specific settings
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;

        # Buffer settings for large file uploads
        proxy_buffering off;
        proxy_request_buffering off;
        client_max_body_size 100M;
    }
}
